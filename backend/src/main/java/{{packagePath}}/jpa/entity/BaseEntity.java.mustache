package {{{javaPackageFull}}}.jpa.entity;

import jakarta.persistence.*;
import lombok.*;
import lombok.experimental.SuperBuilder;
import org.hibernate.annotations.Where;

/**
 * Base entity class for all JPA entities in {{{projectName}}}
 *
 * Provides common fields for all tables:
 * - id: Primary key
 * - deleted: Soft delete flag
 * - deleteReason: Reason for deletion
 * - tenantId: Multi-tenant support
 * - createdTime: Creation timestamp (epoch millis)
 * - modifiedTime: Last modification timestamp (epoch millis)
 * - createdBy: User who created the record
 * - modifiedBy: User who last modified the record
 * - slug: URL-friendly identifier
 */
@Data
@SuperBuilder
@NoArgsConstructor
@AllArgsConstructor
@MappedSuperclass
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
@Where(clause = "deleted = false")
public abstract class BaseEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @EqualsAndHashCode.Include
    private Long id;

    @Builder.Default
    private Boolean deleted = false;

    private String deleteReason;

    private String tenantId;

    private Long createdTime;

    private Long modifiedTime;

    private String createdBy;

    private String modifiedBy;

    private String slug;

    @PrePersist
    protected void onCreate() {
        Long now = System.currentTimeMillis();
        if (createdTime == null) {
            createdTime = now;
        }
        if (modifiedTime == null) {
            modifiedTime = now;
        }
    }

    @PreUpdate
    protected void onUpdate() {
        modifiedTime = System.currentTimeMillis();
    }
}
